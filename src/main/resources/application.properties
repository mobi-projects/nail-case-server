spring.application.name=nail-case-sever
server.servlet.context-path=/api/v1
# Devtools \uC124\uC815
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=true
# Springdoc OpenAPI \uC124\uC815
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.use-fqn=true
# message
spring.messages.basename=messages
#jwt \uAD00\uB828 // \uC77C\uB2E8\uC740 \uC554\uD638\uD654\uD574\uC57C\uD558\uB294\uB370 \uC544\uC9C1\uC740 \uD558\uC9C0 \uC54A\uACA0\uC2B5\uB2C8\uB2E4.
jwt.access.expiration=7200000
jwt.refresh.expiration=43200000
jwt.access.header=Authorization
jwt.refresh.header=Refresh-Token
jwt.access.name=access_token
jwt.refresh.name=refresh_token
# \uAE30\uBCF8 \uD504\uB85C\uD30C\uC77C \uC124\uC815 (\uAC1C\uBC1C \uD658\uACBD)
spring.profiles.active=dev
jwt.secretKey=${JWT_SECRET_KEY:default_jwt_secret_key}
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID:default_kakao_client_id}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET:default_kakao_client_secret}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI:http://localhost:3000/sign/oauth2/callback/kakao}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.data.web.pageable.default-page-size=2
spring.data.web.pageable.max-page-size=50
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul
spring.jackson.time-zone=Asia/Seoul
# Validation
validation.rules.lat.regexp=^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$
validation.rules.lat.msg=Latitude must be between -90 and 90 degrees inclusive.
validation.rules.lon.regexp=^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-7][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$
validation.rules.lon.msg=Longitude must be between -180 and 180 degrees inclusive.
validation.rules.point.regexp=.*,.*
validation.rules.point.msg=Point must be an array of two elements with valid latitude and longitude values.
# response encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
# jackson
spring.jackson.serialization.WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS=true
#MultiPart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# RabbitMQ
